apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: royalafg-auth
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/api/auth`)
      kind: Rule
      services:
        - name: royalafg-auth
          port: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: royalafg-authtls
spec:
  entryPoints:
    - websecure
  routes:
    - match: PathPrefix(`/api/auth`)
      kind: Rule
      services:
        - name: royalafg-auth
          port: 8080
  tls:
    certResolver: myresolver
---
apiVersion: v1
kind: Service
metadata:
  name: royalafg-auth
spec:
  selector:
    app: royalafg-auth
  ports:
    - name: web
      port: 8080
      targetPort: 8080

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: royalafg-auth
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: royalafg-auth
data:
  config.yaml: |
    jwt_signing_key: testsecret

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: royalafg-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: royalafg-auth
  template:
    metadata:
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
      labels:
        app: royalafg-auth
        service: auth
    spec:
      serviceAccountName: royalafg-auth
      containers:
        - name: royalafg-auth
          image: docker.io/johnnys318/royalafg_auth:latest
          resources:
              requests:
                memory: 10Mi
                cpu: 80m
          ports:
            - protocol: TCP
              containerPort: 8080
          volumeMounts:
            - name: royalafg-auth-config
              mountPath: "/etc/royalafg-auth"
      volumes:
        - name: royalafg-auth-config
          configMap:
            name: royalafg-auth
